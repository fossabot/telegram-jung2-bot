service: jung2bot

frameworkVersion: '>=1.40.0 <2.0.0'

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${env:STAGE, 'dev'}
  region: ${env:REGION, 'us-east-1'}
  profile: ${env:PROFILE, 'default'}
  memorySize: 128
  timeout: 6
  logRetentionInDays: 1
  deploymentBucket:
    serverSideEncryption: AES256
  environment:
    LOG_LEVEL: ${env:LOG_LEVEL, 'error'}
    TELEGRAM_BOT_TOKEN: ${ssm:${self:service}-${self:provider.stage}-telegram-api-token~true}
  tags:
    Name: jung2bot
  tracing:
    lambda: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'dynamodb:*'
      Resource: !Join
        - ''
        - - !GetAtt Jung2BotDynamoDB.Arn
          - '*'
    - Effect: Allow
      Action:
        - 'sns:Publish'
      Resource: !Ref MessagesDeadLetterTopic

functions:
  messages:
    handler: src/handler.onMessage
    deadLetter:
      sns: onMessage-dl-topic
    events:
      - http:
          path: /
          method: post

plugins:
  - serverless-domain-manager
  - serverless-plugin-lambda-dead-letter
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

custom:
  # serverless-domain-manager
  customDomain:
    domainName: ${env:DOMAIN}
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: edge
  # serverless-dynamodb-local
  dynamodb:
    start:
      seed: true
      migrate: true
    seed:
      domain:
        sources:
          - table: ${env:MESSAGE_TABLE}
            sources: [./test/helper/dynamodbSeed.json]

resources:
  Resources:
    # Jung2Bot DynamoDB
    Jung2BotDynamoDB:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: dateCreated
            AttributeType: S
          - AttributeName: chatId
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: dateCreated
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: ${env:MESSAGE_TABLE_GSI}
            KeySchema:
              - AttributeName: chatId
                KeyType: HASH
              - AttributeName: dateCreated
                KeyType: RANGE
            Projection:
              NonKeyAttributes:
                - chatTitle
                - userId
                - username
                - firstName
                - lastName
              ProjectionType: INCLUDE
        BillingMode: PAY_PER_REQUEST
        SSESpecification:
          SSEEnabled: true
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        TableName: ${env:MESSAGE_TABLE}
